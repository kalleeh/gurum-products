# This is a sample, non-production-ready template.
#
# © 2019 Amazon Web Services, In​c. or its affiliates. All Rights Reserved.
#
# This AWS Content is provided subject to the terms of the
# AWS Customer Agreement available at http://aws.amazon.com/agreement
# or other written agreement between Customer and either
# Amazon Web Services, Inc. or Amazon Web Services EMEA SARL or both.

AWSTemplateFormatVersion: "2010-09-09"
Description: Pipeline for deployment apps

Parameters:
  GitHubRepo:
    Type: String

  GitHubBranch:
    Type: String

  GitHubToken:
    Type: String
    NoEcho: true

  GitHubUser:
    Type: String

  ApplicationName:
    Type: String
    Default: ""

  EnvironmentDev:
    Type: String
    Default: ""

  EnvironmentTest:
    Type: String
    Default: ""

  EnvironmentProd:
    Type: String

Conditions:
  DevStageExist: !Not [!Equals ["", !Ref EnvironmentDev ]]
  TestStageExist: !Not [!Equals ["", !Ref EnvironmentTest ]]
  AddApproval: !Or [ !Condition DevStageExist, !Condition TestStageExist ]

Resources:
  Repository:
    Type: AWS::ECR::Repository
    DeletionPolicy: Delete

  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Resource: "*"
                Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - ecr:GetAuthorizationToken
              - Resource: !Sub arn:aws:s3:::${ArtifactBucket}/*
                Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:GetObjectVersion

  CodePipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Resource:
                  - !Sub arn:aws:s3:::${ArtifactBucket}/*
                Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:GetBucketVersioning
              - Resource: "*"
                Effect: Allow
                Action:
                  - elasticbeanstalk:CreateApplicationVersion
                  - elasticbeanstalk:DescribeApplicationVersions
                  - elasticbeanstalk:DescribeEnvironments
                  - elasticbeanstalk:DescribeEvents
                  - elasticbeanstalk:UpdateEnvironment
                  - autoscaling:DescribeAutoScalingGroups
                  - autoscaling:DescribeLaunchConfigurations
                  - autoscaling:DescribeScalingActivities
                  - autoscaling:ResumeProcesses
                  - autoscaling:SuspendProcesses
                  - cloudformation:GetTemplate
                  - cloudformation:CancelUpdateStack
                  - cloudformation:DescribeStackResource
                  - cloudformation:DescribeStackResources
                  - cloudformation:DescribeStackEvents
                  - cloudformation:DescribeStacks
                  - cloudformation:UpdateStack
                  - ec2:DescribeInstances
                  - ec2:DescribeImages
                  - ec2:DescribeAddresses
                  - ec2:DescribeSubnets
                  - ec2:DescribeVpcs
                  - ec2:DescribeSecurityGroups
                  - ec2:DescribeKeyPairs
                  - elasticloadbalancing:ApplySecurityGroupsToLoadBalancer
                  - elasticloadbalancing:RegisterInstancesWithLoadBalancer
                  - rds:DescribeDBInstances
                  - rds:DescribeOrderableDBInstanceOptions
                  - sns:ListSubscriptionsByTopic
                  - codebuild:StartBuild
                  - codebuild:BatchGetBuilds
                  - iam:PassRole

  ArtifactBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete

  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Source:
        Type: CODEPIPELINE
        BuildSpec: |
          version: 0.2
          phases:
            install:
              runtime-versions:
                java: corretto11
            pre_build:
              commands:
                - echo Nothing to do in the pre_build phase...
            build:
              commands:
                - echo Build started on `date`
                - mvn dependency:go-offline
                - mvn package -Dmaven.test.skip=true
            post_build:
              commands:
                - echo Build completed on `date`
          artifacts:
            files:
              - target/*.jar
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:1.0
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: AWS_DEFAULT_REGION
            Value: !Ref AWS::Region
          - Name: REPOSITORY_URI
            Value: !Sub ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${Repository}
      Name: !Ref AWS::StackName
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt CodePipelineServiceRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactBucket
      Stages:
        - Name: Source
          Actions:
            - Name: Source
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: "1"
                Provider: GitHub
              Configuration:
                Owner: !Ref GitHubUser
                Repo: !Ref GitHubRepo
                Branch: !Ref GitHubBranch
                OAuthToken: !Ref GitHubToken
              OutputArtifacts:
                - Name: App
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: ContainerBuild
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: "1"
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref CodeBuildProject
              InputArtifacts:
                - Name: App
              OutputArtifacts:
                - Name: BuildOutput
              RunOrder: 1
        - !If
          - DevStageExist
          - Name: Development
            Actions:
              - Name: DeployDev
                ActionTypeId:
                  Category: Deploy
                  Owner: AWS
                  Version: "1"
                  Provider: ElasticBeanstalk
                Configuration:
                  ApplicationName: !Ref ApplicationName
                  EnvironmentName: !Ref EnvironmentDev
                InputArtifacts:
                  - Name: BuildOutput
                RunOrder: 1
          - !Ref AWS::NoValue
        - !If
          - TestStageExist
          - Name: Test
            Actions:
              - Name: DeployTest
                ActionTypeId:
                  Category: Deploy
                  Owner: AWS
                  Version: "1"
                  Provider: ElasticBeanstalk
                Configuration:
                  ApplicationName: !Ref ApplicationName
                  EnvironmentName: !Ref EnvironmentTest
                InputArtifacts:
                  - Name: BuildOutput
                RunOrder: 1
          - !Ref AWS::NoValue
        - !If
          - AddApproval
          - Name: ApprovalStage
            Actions:
              - Name: Approval
                ActionTypeId:
                    Category: Approval
                    Owner: AWS
                    Version: "1"
                    Provider: Manual
          - !Ref AWS::NoValue
        - Name: Production
          Actions:
            - Name: DeployProd
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: "1"
                Provider: ElasticBeanstalk
              Configuration:
                ApplicationName: !Ref ApplicationName
                EnvironmentName: !Ref EnvironmentProd
              InputArtifacts:
                - Name: BuildOutput
              RunOrder: 1

  Webhook:
    Type: 'AWS::CodePipeline::Webhook'
    Properties:
      AuthenticationConfiguration:
        SecretToken: secret
      Filters:
      - JsonPath: "$.ref"
        MatchEquals: refs/heads/{Branch}
      Authentication: GITHUB_HMAC
      TargetPipeline: !Ref Pipeline
      TargetAction: Source
      TargetPipelineVersion: !GetAtt Pipeline.Version
      RegisterWithThirdParty: true

Outputs:
  PipelineName:
    Value: !Sub ${Pipeline}

  EnvironmentDev:
    Value: !Ref EnvironmentDev

  EnvironmentTest:
    Value: !Ref EnvironmentTest

  EnvironmentProd:
    Value: !Ref EnvironmentProd